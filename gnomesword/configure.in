dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gnomesword, 0.3.5)
AM_CONFIG_HEADER(config.h)

dnl Pick up the Gnome macros.
AM_ACLOCAL_INCLUDE(macros)

GNOME_INIT
AC_ISC_POSIX
AC_PROG_CC
AC_HEADER_STDC

dnl ------------------------------------------------------------------------
dnl Find a file (or one of more files in a list of dirs)
dnl ------------------------------------------------------------------------
dnl
AC_DEFUN(AC_FIND_FILE,
[
$3=NO
for i in $2; do
  for j in $1; do
    if test -r "$i/$j"; then
      $3=$i
      break 2
    fi
  done
done
])
 
dnl looking for general SWORD path 
 
AC_ARG_WITH(sworddir, 
[  --with-sworddir=DIR     path where swordlib is installed (default=/usr/local/sword) ], 
[ 
  ac_sword_dir=$withval 
], ac_sword_dir=/usr/local/sword 
) 
 
dnl looking for sword includes 
AC_MSG_CHECKING([for sword headers]) 
sword_incdirs="${prefix}/include $ac_sword_dir/include $ac_sword_dir/include/sword /usr/include/sword /usr/include /usr/local/include /usr/local/sword/include /usr/local/include/sword /opt/sword/include /usr/sword/include/sword /usr/local/include/sword /usr/local/sword/include/sword /opt/sword/include/sword" 
AC_FIND_FILE(swmgr.h, $sword_incdirs, sword_incdir) 
 
AC_MSG_RESULT([$sword_incdir]) 
 
dnl looking for sword library 
AC_MSG_CHECKING([for sword library]) 
sword_libdirs="${prefix}/lib $ac_sword_dir/lib /usr/lib /usr/sword/lib /usr/local/lib /usr/local/sword/lib /usr/lib/sword/lib /usr/local/share/sword/lib /opt/sword/lib" 
 
AC_FIND_FILE(libsword.so, $sword_libdirs, sword_libdir) 
if test -r $sword_libdir/libsword.so; then 
 HAVE_SWORD_LIB=yes 
 SWORD_LIB_TYPE="shared" 
elif test ! -r $sword_libdir/libsword.so; then 
 HAVE_SWORD_LIB=no 
fi 
 
if test $HAVE_SWORD_LIB = no; then 
 AC_FIND_FILE(libsword.a, $sword_libdirs, sword_libdir) 
 if test -r $sword_libdir/libsword.a; then 
 HAVE_SWORD_LIB=yes 
 SWORD_LIB_TYPE="static" 
 fi 
fi 
 
if test $HAVE_SWORD_LIB = no; then 
 AC_MSG_ERROR(SWORD library not found.Try to use configure with --with-sworddir=/your/sword/prefix) 
fi 
 
SWORD_CPPFLAGS="-I$sword_incdir" 
SWORD_LIBS="-L$sword_libdir -lsword -lz" 
 
AC_SUBST(SWORD_CPPFLAGS) 
AC_SUBST(SWORD_LIBS) 
 
AC_MSG_RESULT([$SWORD_LIB_TYPE $sword_libdir]) 
 

GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS

dnl ******************************
dnl GdkPixbuf checking
dnl ******************************
AC_MSG_CHECKING(for Gdkpixbuf libraries)
if gnome-config --libs gdk_pixbuf gnomecanvaspixbuf > /dev/null 2>&1; then 
    AC_MSG_RESULT(found)
else
    AC_MSG_ERROR(Did not find gdkpixbuf installed)
fi

dnl ******************************
dnl GnomePrint checking
dnl ******************************
AC_MSG_CHECKING(for GnomePrint libraries >= 0.20)
if gnome-config --libs print > /dev/null 2>&1; then 
    vers=`gnome-config --modversion print | sed -e "s/gnome-print-//" | \
        awk 'BEGIN { FS = "."; } { print $1 * 1000 + $2;}'`
    if test "$vers" -ge 20; then
        AC_MSG_RESULT(found)                
    else
        AC_MSG_ERROR(You need at least GNOME print 0.20 for this version of gnomesword)        
    fi
else
    AC_MSG_ERROR(Did not find GnomePrint installed)
fi
GNOME_PRINT_LIBS=`gnome-config --libs print`
GNOME_PRINT_CFLAGS=`gnome-config --cflags print`
AC_SUBST(GNOME_PRINT_LIBS)
AC_SUBST(GNOME_PRINT_CFLAGS)


dnl Subst PACKAGE_PIXMAPS_DIR.
PACKAGE_PIXMAPS_DIR="`gnome-config --datadir`/pixmaps/${PACKAGE}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Initialize libtool
AM_PROG_LIBTOOL

AC_PROG_CXX
AC_LANG_CPLUSPLUS
AC_ARG_ENABLE(spellchecking,[--enable-spellchecking		enable spellchecking w/aspell],spellchecking=$enableval,spellchecking="no")


EXTRA_GNOME_LIBS="`gnome-config --libs libglade gdk_pixbuf gnomecanvaspixbuf gnomeui ` $THREADS_LIBS `unicode-config --libs`"
EXTRA_GNOME_CFLAGS="`gnome-config --cflags libglade gdk_pixbuf gnomecanvaspixbuf gnomeui ` $THREADS_CFLAGS `unicode-config --cflags`"
AC_SUBST(EXTRA_GNOME_LIBS)
AC_SUBST(EXTRA_GNOME_CFLAGS)

LIBS="$LIBS -L/usr/local/lib -L/usr/lib -lgnomeprint `xml-config --libs`"

dnl Only use -Wall if we have gcc
if test "x$GCC" = "xyes"; then
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi
if test "x$spellchecking" = xyes; then
	LIBS="$LIBS -laspell"
fi
if test "x$spellchecking" = xyes; then
	AC_DEFINE(USE_ASPELL, 1, [Define if you want to use aspell spell checking])
fi

if test "x$gnomeprint_ok" = xtrue; then
	AC_DEFINE(USE_GNOMEPRINT, 1, [Define if you want to use printing w/gnome-print])
fi

AM_CONDITIONAL(SPELLING,test "x$spellchecking" = xyes)
AM_CONDITIONAL(NO_OPS, test "x$spellchecking" = xno)

AC_OUTPUT([
Makefile
macros/Makefile
gnomesword/Makefile
e-util/Makefile
widgets/Makefile
widgets/e-text/Makefile
widgets/e-paned/Makefile
widgets/misc/Makefile
widgets/shortcut-bar/Makefile
])


echo
echo "Summary of GnomeSword configuration:"
echo
if test "x$spellchecking" = xyes; then
        echo "Spellchecking with Aspell:                    enabled"
else
        echo "Spellchecking with Aspell:                    disabled"
fi

