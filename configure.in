
AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gnomesword-1.0, 0.9.dev5)
AM_CONFIG_HEADER(config.h)

AC_PROG_MAKE_SET

AC_ARG_ENABLE(gnome2,[--enable-gnome2 build for gnome2],gnome2=$enableval,gnome2="no") 

if test "x$gnome2" = xyes; then
	AC_DEFINE(USE_GNOME2, 1, [Define if you want to use Gnome2])
	DIRS="backend main gnome2"
	AC_SUBST(DIRS)
	GNAME="GnomeSword2 Bible Study Tool"
	AC_SUBST(GNAME)	
	gnomesword_exec="gnomesword2"
	AC_SUBST(gnomesword_exec)	
	PKG_CHECK_MODULES(GNOME, libgnomeui-2.0 gtk+-2.0 libgtkhtml-3.0 gal-2.0 libxml-2.0 sword,,exit)
else		
	DIRS="backend main gnome"
	AC_SUBST(DIRS)
	GNAME="GnomeSword Bible Study Tool"
	AC_SUBST(GNAME)	
	gnomesword_exec="gnomesword-1.0"
	AC_SUBST(gnomesword_exec)
	PKG_CHECK_MODULES(GNOME, gtkhtml-1.1 gal libxml sword,,exit)
fi
AC_SUBST(GNOME_LIBS)
AC_SUBST(GNOME_CFLAGS)


dnl Checks select argument types
AC_FUNC_SELECT_ARGTYPES
AC_HEADER_TIME

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AM_PROG_LIBTOOL

AC_PROG_CXX
AC_LANG_CPLUSPLUS


GETTEXT_PACKAGE=gnomesword-1.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTTEXT_PACKAGE", [Package name for gettext])

dnl Languages which your application supports
ALL_LINGUAS="bg de es es_ES fr ru sk"
AM_GLIB_GNU_GETTEXT
dnl AM_GNU_GETTEXT
dnl AM_GNU_GETTEXT_VERSION(0.11.4)

AC_ARG_ENABLE(debug,[  --enable-debug          build debug library [default=no]],,enable_debug=no)
CXXFLAGS="$CXXFLAGS -ftemplate-depth-25"

if test x$enable_debug = xyes; then
  if test x$ac_cv_prog_cc_g = xyes; then
    CFLAGS="-g3 -O0"
  else
    CFLAGS="-O0"
  fi
  if test x$ac_cv_prog_cxx_g = xyes; then
    CXXFLAGS="-g3 -O0"
  else
    CXXFLAGS="-O0"
  fi
  CFLAGS="$CFLAGS -Werror"
  CXXFLAGS="$CXXFLAGS -Werror"
fi


AC_ARG_ENABLE(spell_check,[--enable-spell_check enable spell_check],spell_check=$enableval,spell_check="no") 

PSPELL_LIBS=""
AC_SUBST(PSPELL_LIBS)

if test "x$spell_check" = xyes; then
  AC_MSG_CHECKING([for pspell]) 
  pspell_dirs="${prefix}/bin $ac_pspell_dir/bin /usr/bin /usr/local/bin /opt/bin" 
  AC_FIND_FILE(pspell-compat-config, $pspell_dirs, pspell_dir) 

  if test -r $pspell_dir/pspell-compat-config; then 
    HAVE_PSPELL=yes 
    have_speller="yes"
    speller="pspell"
    AC_DEFINE(USE_PSPELL, 1, [Define if you want to use pspell])
    AC_DEFINE(USE_SPELL, 1, [Define if you want to spell checking])
    PSPELL_LIBS="-L$pspell_dir -lpspell-compat -laspell-compat -lltdl"
    AC_SUBST(PSPELL_LIBS) 
    echo "found"
  fi
fi

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale",[package LOCALE directory])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale",[package LOCALE directory])
fi


dnl Set PACKAGE SOURCE DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`

dnl Set PACKAGE PREFIX
if test "x${prefix}" = "xNONE"; then
  packageprefix=${ac_default_prefix}
else
  packageprefix=${prefix}
fi

dnl Set PACKAGE DATA & DOC DIR
packagedatadir=share/${PACKAGE}
packagedocdir=doc/${PACKAGE}

dnl Set PACKAGE DIRs in config.h.
packagepixmapsdir=share/pixmaps/${PACKAGE}
packagehelpdir=share/gnome/help/${PACKAGE}
packagemenudir=share/gnome/apps

dnl Subst PACKAGE_DATA_DIR.
NO_PREFIX_PACKAGE_DATA_DIR="${packagedatadir}"
AC_SUBST(NO_PREFIX_PACKAGE_DATA_DIR)
PACKAGE_DATA_DIR="${packageprefix}/${packagedatadir}"
AC_SUBST(PACKAGE_DATA_DIR)

dnl Subst PACKAGE_DOC_DIR.
NO_PREFIX_PACKAGE_DOC_DIR="${packagedocdir}"
AC_SUBST(NO_PREFIX_PACKAGE_DOC_DIR)
PACKAGE_DOC_DIR="${packageprefix}/${packagedocdir}"
AC_SUBST(PACKAGE_DOC_DIR)

dnl Subst PACKAGE_PIXMAPS_DIR.
NO_PREFIX_PACKAGE_PIXMAPS_DIR="${packagepixmapsdir}"
AC_SUBST(NO_PREFIX_PACKAGE_PIXMAPS_DIR)
PACKAGE_PIXMAPS_DIR="${packageprefix}/${packagepixmapsdir}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Subst PACKAGE_HELP_DIR.
NO_PREFIX_PACKAGE_HELP_DIR="${packagehelpdir}"
AC_SUBST(NO_PREFIX_PACKAGE_HELP_DIR)
PACKAGE_HELP_DIR="${packageprefix}/${packagehelpdir}"
AC_SUBST(PACKAGE_HELP_DIR)

dnl Subst PACKAGE_MENU_DIR.
NO_PREFIX_PACKAGE_MENU_DIR="${packagemenudir}"
AC_SUBST(NO_PREFIX_PACKAGE_MENU_DIR)
PACKAGE_MENU_DIR="${packageprefix}/${packagemenudir}"
AC_SUBST(PACKAGE_MENU_DIR)

AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packageprefix}/${packagedatadir}",[package data directory])
AC_DEFINE_UNQUOTED(PACKAGE_DOC_DIR, "${packageprefix}/${packagedocdir}",[package doc directory])
AC_DEFINE_UNQUOTED(PACKAGE_PIXMAPS_DIR, "${packageprefix}/${packagepixmapsdir}",[package pixmap directory])
AC_DEFINE_UNQUOTED(PACKAGE_HELP_DIR, "${packageprefix}/${packagehelpdir}",[package help directory])
AC_DEFINE_UNQUOTED(PACKAGE_MENU_DIR, "${packageprefix}/${packagemenudir}",[package menu directory])
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}",[package source directory])

AC_OUTPUT([ m4/Makefile 
Makefile
po/Makefile.in
doc/Makefile
doc/help/Makefile
src/Makefile
src/backend/Makefile
src/gnome/Makefile
src/gnome2/Makefile
src/main/Makefile
gnomesword-1.0.desktop
])

echo
echo "Summary of GnomeSword1 configuration:"
echo

if test "x$gnome2" = xyes; then
	echo "using Gnome:                   2.x"  
else
        echo "using Gnome:                   1.4.x"
fi


if test "x$have_speller" = xyes; then
        echo "Spellchecking:                enabled"
	echo "using:                            $speller"
else
        echo "Spellchecking:                disabled"
fi

echo "install directory:              ${prefix}/bin"
