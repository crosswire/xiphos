dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gnomesword, 0.4.2)
AM_CONFIG_HEADER(config.h)

dnl Pick up the Gnome macros.
AM_ACLOCAL_INCLUDE(macros)

GNOME_INIT
AC_ISC_POSIX
AC_PROG_CC
AC_HEADER_STDC

GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS

dnl Subst PACKAGE_PIXMAPS_DIR.
PACKAGE_PIXMAPS_DIR="`gnome-config --datadir`/pixmaps/${PACKAGE}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Subst PACKAGE_HELP_DIR.
PACKAGE_HELP_DIR="`gnome-config --datadir`/gnome/help/${PACKAGE}"
AC_SUBST(PACKAGE_HELP_DIR)

dnl Subst PACKAGE_MENU_DIR.
PACKAGE_MENU_DIR="`gnome-config --datadir`/gnome/apps"
AC_SUBST(PACKAGE_MENU_DIR)

dnl Initialize libtool
AM_PROG_LIBTOOL

AC_PROG_CXX
AC_LANG_CPLUSPLUS


dnl **************************
dnl  For the spell checker
dnl **************************

dnl don't define WITH_SPC if you want to build without spell-checker
AC_DEFINE(WITH_SPC, 1, [Define if you want to use spell checking])

#AC_DEFINE(DEBUG, 1, [Define if you want to use debug])

dnl Checks select argument types
AC_FUNC_SELECT_ARGTYPES
AC_HEADER_TIME


dnl ------------------------------------------------------------------------
dnl Find a file (or one of more files in a list of dirs)
dnl ------------------------------------------------------------------------
dnl
AC_DEFUN(AC_FIND_FILE,
[
$3=NO
for i in $2; do
  for j in $1; do
    if test -r "$i/$j"; then
      $3=$i
      break 2
    fi
  done
done
])
 
dnl looking for general SWORD path 
 
AC_ARG_WITH(sworddir, 
[  --with-sworddir=DIR     path where swordlib is installed (default=/usr/local/sword) ], 
[ 
  ac_sword_dir=$withval 
], ac_sword_dir=/usr/local/sword 
) 
 
dnl looking for sword includes 
AC_MSG_CHECKING([for sword headers]) 
sword_incdirs="${prefix}/include $ac_sword_dir/include $ac_sword_dir/include/sword /usr/include/sword /usr/include /usr/local/include /usr/local/sword/include /usr/local/include/sword /opt/sword/include /usr/sword/include/sword /usr/local/include/sword /usr/local/sword/include/sword /opt/sword/include/sword" 
AC_FIND_FILE(swmgr.h, $sword_incdirs, sword_incdir) 
 
AC_MSG_RESULT([$sword_incdir]) 
 
dnl looking for sword library 
AC_MSG_CHECKING([for sword library]) 
sword_libdirs="${prefix}/lib $ac_sword_dir/lib /usr/lib /usr/sword/lib /usr/local/lib /usr/local/sword/lib /usr/lib/sword/lib /usr/local/share/sword/lib /opt/sword/lib" 
 
AC_FIND_FILE(libsword.so, $sword_libdirs, sword_libdir) 
if test -r $sword_libdir/libsword.so; then 
 HAVE_SWORD_LIB=yes 
 SWORD_LIB_TYPE="shared" 
elif test ! -r $sword_libdir/libsword.so; then 
 HAVE_SWORD_LIB=no 
fi 
 
if test $HAVE_SWORD_LIB = no; then 
 AC_FIND_FILE(libsword.a, $sword_libdirs, sword_libdir) 
 if test -r $sword_libdir/libsword.a; then 
 HAVE_SWORD_LIB=yes 
 SWORD_LIB_TYPE="static" 
 fi 
fi 
 
if test $HAVE_SWORD_LIB = no; then 
 AC_MSG_ERROR(SWORD library not found.Try to use configure with --with-sworddir=/your/sword/prefix) 
fi 
 
SWORD_CPPFLAGS="'-I$sword_incdir' -g" 
SWORD_LIBS="-L$sword_libdir -lsword -lz" 
 
AC_SUBST(SWORD_CPPFLAGS) 
AC_SUBST(SWORD_LIBS) 
 
AC_MSG_RESULT([$SWORD_LIB_TYPE $sword_libdir]) 

AC_ARG_ENABLE(spellchecking,[--enable-spellchecking		enable spellchecking],spellchecking=$enableval,spellchecking="no") 

have_speller="no"
dnl looking for aspell 
if test "x$spelchecking" = xyes || test "x$all" = xyes; then
  AC_MSG_CHECKING([for aspell]) 
  aspell_dirs="${prefix}/bin $ac_aspell_dir/bin /usr/bin /usr/local/bin" 
  AC_FIND_FILE(aspell, $aspell_dirs, aspell_dir) 
  if test -r $aspell_dir/aspell; then 
   HAVE_ASPELL=yes 
   have_speller="yes"
   AC_DEFINE(USE_ASPELL, 1, [Define if you want to use aspell])
   echo "found"
  else
   AC_MSG_CHECKING([for ispell]) 
   ispell_dirs="${prefix}/bin $ac_ispell_dir/bin /usr/bin /usr/local/bin" 
   AC_FIND_FILE(ispell, $ispell_dirs, ispell_dir) 
   if test -r $ispell_dir/ispell; then 
    HAVE_ISPELL=yes 
    have_speller="yes"
    AC_DEFINE(USE_ISPELL, 1, [Define if you want to use ispell])
    echo "found"
   fi
  fi
fi

dnl ******************************
dnl GdkPixbuf checking
dnl ******************************
have_pixbuf="no"
 AC_MSG_CHECKING(for Gdkpixbuf libraries)
if gnome-config --libs gdk_pixbuf gnomecanvaspixbuf > /dev/null 2>&1; then 
    AC_MSG_RESULT(found)
        PIXBUF_LIBS=`gnome-config --libs gdk_pixbuf gnomecanvaspixbuf`
        PIXBUF_CFLAGS=`gnome-config --cflags gdk_pixbuf gnomecanvaspixbuf`
        AC_SUBST(PIXBUF_LIBS)
        AC_SUBST(PIXBUF_CFLAGS)
    have_pixbuf="yes"
else
    AC_MSG_ERROR(Did not find gdkpixbuf installed)
fi

dnl ******************************
dnl GnomePrint checking
dnl ******************************
have_gnomeprint="no"
 AC_MSG_CHECKING(for GnomePrint libraries >= 0.20)
if gnome-config --libs print > /dev/null 2>&1; then 
    vers=`gnome-config --modversion print | sed -e "s/gnome-print-//" | \
        awk 'BEGIN { FS = "."; } { print $1 * 1000 + $2;}'`
    if test "$vers" -ge 25; then
        AC_MSG_RESULT(found)
        GNOME_PRINT_LIBS=`gnome-config --libs print`
        GNOME_PRINT_CFLAGS=`gnome-config --cflags print`
        AC_SUBST(GNOME_PRINT_LIBS)
        AC_SUBST(GNOME_PRINT_CFLAGS)
        AC_DEFINE(USE_GNOMEPRINT, 1, [Define if you want to use printing w/gnome-print])
        have_gnomeprint="yes"
    else
        AC_MSG_ERROR(You need at least GNOME print 0.25 for this version of gnomesword)
    fi
else
    AC_MSG_ERROR(Did not find GnomePrint installed)
fi

dnl ******************************
dnl Gnome App Lib checking
dnl ******************************
have_gal="no"
 AC_MSG_CHECKING(for Gnome App libraries (GAL) >= 0.4.99.7)
if gnome-config --libs gal > /dev/null 2>&1; then 
    vers=`gnome-config --modversion gal | sed -e "s/gal-//" -e 's/cvs$//' -e 's/pre$//' | \
        awk 'BEGIN { FS = "."; } { print $1 * 1000000 + $2 * 10000 + $3 * 100 + $4;}'`
    if test "$vers" -ge 49907; then
        AC_MSG_RESULT(found)
        GNOME_APP_LIBS=`gnome-config --libs gal`
        GNOME_APP_CFLAGS=`gnome-config --cflags gal`
        AC_SUBST(GNOME_APP_LIBS)
        AC_SUBST(GNOME_APP_CFLAGS)
        have_gal="yes"
    else
        AC_MSG_ERROR(Did not find GNOME Application libs 0.4.99.7 )
    fi
else
    AC_MSG_ERROR(Did not find GnomeAppLib (GAL) installed)
fi

dnl ******************************
dnl GtkHTML checking
dnl ******************************
gtkhtml_ok="false"
AC_MSG_CHECKING(for GtkHTML)
  if gnome-config --libs gtkhtml > /dev/null 2>&1; then
	vers=`gnome-config --modversion gtkhtml`
	case $vers
	in
	    gtkhtml-0.[012345678]) gtkhtml_ok=false ;;
	    *) gtkhtml_ok=true ;;
	esac
  else
	gtkhtml_ok=false
  fi

if $gtkhtml_ok; then
	AC_MSG_RESULT($vers found)
else
	AC_MSG_ERROR(GtkHTML 0.8.x is required to build gnomesword)
fi

if $gtkhtml_ok; then
     AC_DEFINE(USE_GTKHTML, 1, [Define if you want to use the GtkHTML])
    EXTRA_GNOME_LIBS="`gnome-config --libs libglade gtkhtml gnomeui` $THREADS_LIBS `unicode-config --libs`"
    EXTRA_GNOME_CFLAGS="`gnome-config --cflags libglade gtkhtml gnomeui` $THREADS_CFLAGS `unicode-config --cflags`"
else
    EXTRA_GNOME_LIBS="`gnome-config --libs libglade gnomeui` $THREADS_LIBS `unicode-config --libs`"
    EXTRA_GNOME_CFLAGS="`gnome-config --cflags libglade gnomeui` $THREADS_CFLAGS `unicode-config --cflags`"
fi

AC_SUBST(EXTRA_GNOME_LIBS)
AC_SUBST(EXTRA_GNOME_CFLAGS)

LIBS="$LIBS -L/usr/local/lib -L/usr/lib `xml-config --libs`"

dnl Only use -Wall if we have gcc
if test "x$GCC" = "xyes"; then
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi

if test "x$spellchecking" = xyes || test "x$all" = xyes; then
	AC_DEFINE(USE_SPELL, 1, [Define if you want to use spell checking])
fi

AC_DEFINE(USE_SHORTCUTBAR, 1, [Define if you want to use the shortcutbar])

AM_CONDITIONAL(SPELLING,test "x$have_speller" = xyes)

AC_OUTPUT([
Makefile
macros/Makefile
src/editor/Makefile
src/gsdialogs/Makefile
src/gssword/Makefile
src/Makefile
])


echo
echo "Summary of GnomeSword configuration:"
echo
if test "x$have_speller" = xyes; then
        echo "Spellchecking:                    enabled"
else
        echo "Spellchecking:                    disabled"
fi

echo "run make to build GnomeSword"

